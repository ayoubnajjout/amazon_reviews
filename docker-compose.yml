version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server=kafka:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

  spark:
    image: bitnami/spark:3.5.0
    container_name: spark
    ports:
      - "4040:4040"
      - "8080:8080"
      - "8000:8000"
    volumes:
      - ./:/workspace
      - ./checkpoints:/tmp/checkpoints
      - ./spark_data:/tmp/spark_data
      - ./nltk_data:/opt/nltk_data
      - ./spark_data/prod_model:/spark_data/prod_model
      - ./start-services.sh:/start-services.sh
    working_dir: /workspace
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - kafka
      - mongodb
    command: ["bash", "-c", "/workspace/start-services.sh"]
    
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    command: mongod --port 27017
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=amazon_reviews
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand({ping:1})'", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8070:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mongodb_data: